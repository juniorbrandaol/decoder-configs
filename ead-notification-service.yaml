
server:
 port: 8084
 servlet:
  context-path: '/ead-notification/'

spring:
 application:
  name: ead-notification-service
# config:
#   import: 'optional:configserver:'
# cloud:
#    config:
#      discovery:
#       serviceid: 'ead-config-server'
 datasource:
  url:  jdbc:postgresql://localhost:5432/ead-notification-v2
  username: postgres
  password: 1224
 jpa:
    hibernate:
       ddl-auto:update
       dialect:org.hibernate.dialect.PostgreSQLDialect
       jdbc:lob:non_contextual_creation= true
    show_sql: true
    properties:
       hibernate: format_sql=true
       open-in-view: false
       generate-ddl: true
 output:
  ansi:
   enabled: Always

 rabbitmq:
  addresses: amqps://opsazktl:pjGwggbKPiZQ8eOzUD2LXjjjM7yU2Y-B@moose.rmq.cloudamqp.com/opsazktl

logging:
 level:
  com.ead: TRACE
  root: INFO
  org.springframework.web: DEBUG
  org.hibernate: INFO

#broker properties(rabbitmq)
ead:
   broker:
      exchange:
         notificationCommandExchange: ead.notificationCommand
      queue:
         notificationCommandQueue:
            name: ead.notificationCommand.ms.notification
      key:
         notificationCommandkey: ms.notification


#atualiza o config em tempo de execução
management:
 endpoints:
  web:
   exposure:
    include:
     - refresh
     - health

#eureka:
# client:
#  serviceUrl:
#   defaultZone: 'http://localhost:8761/eureka'
# instance:
#  hostname: localhost
